[{"/Users/nadavaluf/Desktop/React-Hrael/src/index.js":"1","/Users/nadavaluf/Desktop/React-Hrael/src/App.js":"2","/Users/nadavaluf/Desktop/React-Hrael/src/reportWebVitals.js":"3","/Users/nadavaluf/Desktop/React-Hrael/src/components/Login.jsx":"4","/Users/nadavaluf/Desktop/React-Hrael/src/components/Home.jsx":"5","/Users/nadavaluf/Desktop/React-Hrael/src/utils/API.js":"6","/Users/nadavaluf/Desktop/React-Hrael/src/components/UsersDataTable.jsx":"7","/Users/nadavaluf/Desktop/React-Hrael/src/store/reducer.js":"8","/Users/nadavaluf/Desktop/React-Hrael/src/components/Edit.jsx":"9","/Users/nadavaluf/Desktop/React-Hrael/src/components/Filter.jsx":"10"},{"size":702,"mtime":1608453210416,"results":"11","hashOfConfig":"12"},{"size":506,"mtime":1608473173007,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1608134286911,"results":"14","hashOfConfig":"12"},{"size":3874,"mtime":1608622629192,"results":"15","hashOfConfig":"12"},{"size":175,"mtime":1608472313090,"results":"16","hashOfConfig":"12"},{"size":144,"mtime":1608183677394,"results":"17","hashOfConfig":"12"},{"size":2581,"mtime":1608477336114,"results":"18","hashOfConfig":"12"},{"size":430,"mtime":1608477216800,"results":"19","hashOfConfig":"12"},{"size":1589,"mtime":1608473279243,"results":"20","hashOfConfig":"12"},{"size":714,"mtime":1608477259994,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1j5azgj",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"/Users/nadavaluf/Desktop/React-Hrael/src/index.js",[],["46","47"],"/Users/nadavaluf/Desktop/React-Hrael/src/App.js",[],"/Users/nadavaluf/Desktop/React-Hrael/src/reportWebVitals.js",[],"/Users/nadavaluf/Desktop/React-Hrael/src/components/Login.jsx",["48","49"],"/Users/nadavaluf/Desktop/React-Hrael/src/components/Home.jsx",[],"/Users/nadavaluf/Desktop/React-Hrael/src/utils/API.js",[],"/Users/nadavaluf/Desktop/React-Hrael/src/components/UsersDataTable.jsx",["50","51"],"import React, { useEffect, useState } from 'react';\nimport API from '../utils/API';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Filter from './Filter';\n\nconst filterParams = {\n\tcomparator        : function (filterLocalDateAtMidnight, cellValue){\n\t\tvar dateAsString = cellValue;\n\t\tif (dateAsString == null) return -1;\n\t\tvar dateParts = dateAsString.split('/');\n\t\tvar cellDate = new Date(Number(dateParts[2]), Number(dateParts[1]) - 1, Number(dateParts[0]));\n\t\tif (filterLocalDateAtMidnight.getTime() === cellDate.getTime()) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (cellDate < filterLocalDateAtMidnight) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (cellDate > filterLocalDateAtMidnight) {\n\t\t\treturn 1;\n\t\t}\n\t},\n\tbrowserDatePicker : true,\n};\n\nfunction UsersDataTable (props){\n\tconst userDataFiltered = useSelector((state) => state.userDataFiltered);\n\tconst history = useHistory();\n\tconst dispatch = useDispatch();\n\tconst [ usersData, setUsersData ] = useState(userDataFiltered);\n\tconst [ gridApi, setGridApi ] = useState(null);\n\tconst [ gridColumnApi, setGridColumnApi ] = useState(null);\n\n\tconst onSelectionChanged = () => {\n\t\tlet selectedRows = gridApi.getSelectedRows()[0];\n\t\tconst { id } = selectedRows;\n\t\thistory.push(`/edit/${id}`);\n\t};\n\tfunction onGridReady (params){\n\t\tsetGridApi(params.api);\n\t\tsetGridColumnApi(params.columnApi);\n\t}\n\n\tuseEffect(\n\t\t() => {\n\t\t\tsetUsersData(userDataFiltered);\n\t\t},\n\t\t[ userDataFiltered ]\n\t);\n\n\tuseEffect(() => {\n\t\t(async function fetchUsersData (){\n\t\t\tlet { data } = await API.get('/users');\n\t\t\tdata.forEach((item) => (item.date = new Date(item.date).toDateString()));\n\t\t\tdispatch({ type: 'update', value: data });\n\t\t\tsetUsersData(data);\n\t\t})();\n\t\treturn () => {};\n\t}, []);\n\treturn (\n\t\t<div className='ag-theme-alpine' style={{ height: 400, width: 1000 }}>\n\t\t\t<Filter />\n\t\t\t<AgGridReact\n\t\t\t\tonGridReady={onGridReady}\n\t\t\t\trowSelection={'single'}\n\t\t\t\tonSelectionChanged={onSelectionChanged}\n\t\t\t\trowData={usersData}>\n\t\t\t\t<AgGridColumn field='id' sortable={true} filter='agNumberColumnFilter' />\n\t\t\t\t<AgGridColumn field='firstName' sortable={true} filter />\n\t\t\t\t<AgGridColumn field='lastName' sortable={true} filter />\n\t\t\t\t<AgGridColumn field='date' sortable={true} filter='agDateColumnFilter' filterParams={filterParams} />\n\t\t\t\t<AgGridColumn field='phone' sortable={true} filter />\n\t\t\t</AgGridReact>\n\t\t</div>\n\t);\n}\nexport default UsersDataTable;\n","/Users/nadavaluf/Desktop/React-Hrael/src/store/reducer.js",[],"/Users/nadavaluf/Desktop/React-Hrael/src/components/Edit.jsx",["52"],"import React, { useState, useEffect } from 'react';\nimport API from '../utils/API';\nimport { useParams, useHistory } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\n\nfunction Edit (){\n\tconst [ userData, setUserData ] = useState({});\n\tconst history = useHistory();\n\tconst onSave = async () => {\n\t\tlet { id } = userData;\n\t\tawait API.post(`/users/${id}`, userData);\n\t\thistory.push('/Home');\n\t};\n\tlet { id } = useParams();\n\tuseEffect(() => {\n\t\t(async function fetchUsersData (){\n\t\t\tlet { data } = await API.get(`/users/${id}`);\n\t\t\tsetUserData(data);\n\t\t})();\n\t\treturn () => {};\n\t}, []);\n\n\tconst setNewVal = (key, event) => {\n\t\tconst newVal = Object.assign({}, userData);\n\t\tnewVal[key] = event.target.value;\n\t\tsetUserData(newVal);\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<Box display='flex' alignItems='center' flexDirection='column'>\n\t\t\t\t<Box display='flex' width='100%' flexDirection='column' alignItems='center' justifyContent>\n\t\t\t\t\t{Object.keys(userData).map((key, index) => {\n\t\t\t\t\t\tif (key !== 'id') {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\t\t\tsetNewVal(key, event);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tid={key}\n\t\t\t\t\t\t\t\t\tlabel={key}\n\t\t\t\t\t\t\t\t\tname={key}\n\t\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t})}\n\t\t\t\t</Box>\n\t\t\t\t<Button variant='contained' color='primary' onClick={onSave}>\n\t\t\t\t\tsave\n\t\t\t\t</Button>\n\t\t\t</Box>\n\t\t</div>\n\t);\n}\n\nexport default Edit;\n","/Users/nadavaluf/Desktop/React-Hrael/src/components/Filter.jsx",["53"],"import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction Filter (){\n\tconst allUserData = useSelector((state) => state.userData);\n\tconst dispatch = useDispatch();\n\tconst searchInput = (searchText) => {\n\t\tconst searchResult = allUserData.filter((item, key) => {\n\t\t\tif (JSON.stringify(item).includes(searchText)) {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t});\n\t\tdispatch({ type: 'update-search-result', value: searchResult });\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<TextField\n\t\t\t\tid='filled-search'\n\t\t\t\tonChange={(e) => searchInput(e.target.value)}\n\t\t\t\tlabel='Search field'\n\t\t\t\ttype='search'\n\t\t\t\tvariant='filled'\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default Filter;\n",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":38,"column":10,"nodeType":"60","messageId":"61","endLine":38,"endColumn":15},{"ruleId":"58","severity":1,"message":"62","line":42,"column":22,"nodeType":"60","messageId":"61","endLine":42,"endColumn":35},{"ruleId":"58","severity":1,"message":"63","line":35,"column":10,"nodeType":"60","messageId":"61","endLine":35,"endColumn":23},{"ruleId":"64","severity":1,"message":"65","line":62,"column":5,"nodeType":"66","endLine":62,"endColumn":7,"suggestions":"67"},{"ruleId":"64","severity":1,"message":"68","line":23,"column":5,"nodeType":"66","endLine":23,"endColumn":7,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":9,"column":55,"nodeType":"72","messageId":"73","endLine":9,"endColumn":57},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'email' is assigned a value but never used.","Identifier","unusedVar","'setErrMessage' is assigned a value but never used.","'gridColumnApi' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["76"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["77"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},"Update the dependencies array to be: [dispatch]",{"range":"82","text":"83"},"Update the dependencies array to be: [id]",{"range":"84","text":"85"},[1907,1909],"[dispatch]",[695,697],"[id]"]